PROGRAM -> PROGRAM_HEADERS int main ( ) MAIN_BLOCK
PROGRAM_HEADERS -> INCLUDE_PROGRAM_HEADERS USING_PROGRAM_HEADER | epsilon
INCLUDE_PROGRAM_HEADERS -> # include < iostream >
USING_PROGRAM_HEADER -> using namespace std ;
MAIN_BLOCK -> { DECLARATIONS INSTRUCTION_LIST RETURN_STATEMENT }
RETURN_STATEMENT -> return VALUE ;
BLOCK -> { DECLARATIONS OPTIONAL_INSTRUCTION_LIST } | { OPTIONAL_INSTRUCTION_LIST }
OPTIONAL_INSTRUCTION_LIST -> INSTRUCTION_LIST | epsilon
DECLARATIONS -> DECLARATION DECLARATIONS | DECLARATION
DECLARATION -> DATA_TYPE VARIABLE_LIST ;
VARIABLE_LIST -> ID | ID , VARIABLE_LIST
DATA_TYPE -> int | float
INSTRUCTION_LIST -> INSTRUCTION INSTRUCTION_LIST | INSTRUCTION
INSTRUCTION -> ASSIGN_INSTRUCTION | IF_INSTRUCTION | I_INSTRUCTION | O_INSTRUCTION | WHILE_LOOP
ASSIGN_INSTRUCTION -> ID = EXPRESSION ; | ID OPERATOR = VALUE ; | ID ++ ; | ++ ID ; | ID -- ; | -- ID ;
EXPRESSION -> VALUE | VALUE OPERATOR EXPRESSION
VALUE -> ID | CONST
IF_INSTRUCTION -> if ( BOOLEAN_EXPRESSION ) BLOCK | if ( BOOLEAN_EXPRESSION ) BLOCK else BLOCK
BOOLEAN_EXPRESSION -> ID BOOL_OPERATOR EXPRESSION
BOOL_OPERATOR -> > | < | != | ==
I_INSTRUCTION -> cin I_TAIL ;
I_TAIL -> >> ID I_TAIL | >> ID | epsilon
O_INSTRUCTION -> cout O_TAIL ;
O_TAIL -> << ID O_TAIL | << ID | << endl | << endl O_TAIL | epsilon
WHILE_LOOP -> while ( BOOLEAN_EXPRESSION ) BLOCK
OPERATOR -> + | - | * | / | %
